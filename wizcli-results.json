{
    "id": "0ec881dd-98e4-48dc-a98e-8d47ffc29fd9",
    "projects": null,
    "createdAt": "2023-04-17T11:58:14.675244667Z",
    "startedAt": "0001-01-01T00:00:00Z",
    "createdBy": {
        "serviceAccount": {
            "id": "wgxq75hrlndpbktx3eupevf2x3z6hxdthsjfz6mrv2l7qd2ndahxg"
        }
    },
    "status": {
        "state": "SUCCESS",
        "verdict": "PASSED_BY_POLICY"
    },
    "policies": [
        {
            "id": "2bae22c8-3520-4014-a6f9-a7902c79ba07",
            "name": "scotty-iac-monitor-only",
            "description": null,
            "type": "IAC",
            "builtin": false,
            "projects": null,
            "params": {
                "__typename": "cicdscanpolicyparamsiac",
                "severityThreshold": "CRITICAL",
                "countThreshold": 9999,
                "ignoredRules": null,
                "validatableIgnoredRules": null,
                "builtinIgnoreTagsEnabled": false,
                "customIgnoreTags": null,
                "securityFrameworks": null
            }
        }
    ],
    "extraInfo": null,
    "tags": null,
    "outdatedPolicies": [],
    "scanOriginResource": {
        "__typename": "CICDScanOriginIac",
        "name": "scotty-gh-iac-scan",
        "subTypes": [
            "TERRAFORM",
            "DOCKERFILE"
        ]
    },
    "result": {
        "__typename": "CICDIACScanResult",
        "failedPolicyMatches": [],
        "ruleMatches": [
            {
                "rule": {
                    "id": "b442b7a9-85dc-40d0-a896-2b83c331ddc7",
                    "name": "EC2 Not EBS Optimized"
                },
                "severity": "INFORMATIONAL",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance[{{db_app}}]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 242,
                        "matchContent": "resource \"aws_instance\" \"db_app\" {",
                        "expected": "'ebs_optimized' should be set to true",
                        "found": "'ebs_optimized' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance[{{web_host}}]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'ebs_optimized' should be set to true",
                        "found": "'ebs_optimized' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "9e676ea2-8e78-4241-ad32-5216cec996bc",
                    "name": "ELB Access Logging Disabled"
                },
                "severity": "INFORMATIONAL",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_elb[{{weblb}}]",
                        "fileName": "aws/elb.tf",
                        "lineNumber": 2,
                        "matchContent": "resource \"aws_elb\" \"weblb\" {",
                        "expected": "'aws_elb[{{weblb}}].access_logs' should be defined and not null",
                        "found": "'aws_elb[{{weblb}}].access_logs' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "dc71e6a7-39ae-4485-9016-f6640e5babe1",
                    "name": "ELBv1/ALB is internet-facing and should be reviewed regularly for security compliance purposes"
                },
                "severity": "INFORMATIONAL",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_elb[weblb]",
                        "fileName": "aws/elb.tf",
                        "lineNumber": 2,
                        "matchContent": "resource \"aws_elb\" \"weblb\" {",
                        "expected": "The field 'internal' should not be set to 'true'",
                        "found": "The field 'internal' is set to 'true'"
                    }
                ]
            },
            {
                "rule": {
                    "id": "cddaf656-e08d-42d3-b17f-d2019675a00f",
                    "name": "EC2 Instance Monitoring Disabled"
                },
                "severity": "INFORMATIONAL",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance.{{db_app}}",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 242,
                        "matchContent": "resource \"aws_instance\" \"db_app\" {",
                        "expected": "'monitoring' should be defined and not null%!(EXTRA string=db_app)",
                        "found": "'monitoring' is undefined or null%!(EXTRA string=db_app)"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance.{{web_host}}",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'monitoring' should be defined and not null%!(EXTRA string=web_host)",
                        "found": "'monitoring' is undefined or null%!(EXTRA string=web_host)"
                    }
                ]
            },
            {
                "rule": {
                    "id": "e41f2cfa-d12b-4e70-85dd-f3e74d58938c",
                    "name": "S3 Bucket MFA Delete should be enabled"
                },
                "severity": "LOW",
                "failedResourceCount": 6,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "versioning should be defined and not null",
                        "found": "versioning is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data_science].versioning",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 94,
                        "matchContent": "  versioning {",
                        "expected": "'mfa_delete' should be set to true",
                        "found": "'mfa_delete' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[financials]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 42,
                        "matchContent": "resource \"aws_s3_bucket\" \"financials\" {",
                        "expected": "versioning should be defined and not null",
                        "found": "versioning is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[flowbucket]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 271,
                        "matchContent": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                        "expected": "versioning should be defined and not null",
                        "found": "versioning is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[logs].versioning",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 117,
                        "matchContent": "  versioning {",
                        "expected": "'mfa_delete' should be set to true",
                        "found": "'mfa_delete' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[operations].versioning",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 70,
                        "matchContent": "  versioning {",
                        "expected": "'mfa_delete' should be set to true",
                        "found": "'mfa_delete' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "78853f1c-49e5-453b-9255-acedcdc4a4d1",
                    "name": "EKS cluster logging is not enabled"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_eks_cluster[eks_cluster]",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 187,
                        "matchContent": "resource aws_eks_cluster \"eks_cluster\" {",
                        "expected": "'enabled_cluster_log_types' should be defined and not null",
                        "found": "'enabled_cluster_log_types' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "b9b65ff3-a6da-46a3-b0cc-ea196747fa89",
                    "name": "OpenSearch (ElasticSearch) Zone Awareness should be enabled"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "Elasticsearch: monitoring-framework",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Elasticsearch monitoring-framework zone awareness should be enabled",
                        "found": "Elasticsearch monitoring-framework zone awareness is disabled"
                    }
                ]
            },
            {
                "rule": {
                    "id": "23feaaa6-66d0-49ea-abdd-9810372adbd4",
                    "name": "Security Group Rule Without Description"
                },
                "severity": "LOW",
                "failedResourceCount": 4,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[{{default}}]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 116,
                        "matchContent": "resource \"aws_security_group\" \"default\" {",
                        "expected": "aws_security_group[{{default}}] description should be defined and not null",
                        "found": "aws_security_group[{{default}}] description is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[{{web-node}}].egress",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 97,
                        "matchContent": "  egress {",
                        "expected": "aws_security_group[{{web-node}}].egress description should be defined and not null",
                        "found": "aws_security_group[{{web-node}}].egress description is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[{{web-node}}].ingress",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 83,
                        "matchContent": "  ingress {",
                        "expected": "aws_security_group[{{web-node}}].ingress description should be defined and not null",
                        "found": "aws_security_group[{{web-node}}].ingress description is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[{{web-node}}].ingress",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 90,
                        "matchContent": "  ingress {",
                        "expected": "aws_security_group[{{web-node}}].ingress description should be defined and not null",
                        "found": "aws_security_group[{{web-node}}].ingress description is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "6cce840b-7867-4f9d-81b7-54b35433d327",
                    "name": "Healthcheck Instruction Missing"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "FROM={{python:3.7-slim}}",
                        "fileName": "aws/resources/Dockerfile",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Dockerfile should contain instruction 'HEALTHCHECK'",
                        "found": "Dockerfile doesn't contain instruction 'HEALTHCHECK'"
                    }
                ]
            },
            {
                "rule": {
                    "id": "8b465d20-8737-4872-a700-bf28ef879819",
                    "name": "Virtual Private Cloud (VPC) Flow Logs feature should be enabled in all applicable AWS regions Copy"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_vpc[eks_vpc]",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 43,
                        "matchContent": "resource aws_vpc \"eks_vpc\" {",
                        "expected": "aws_vpc[eks_vpc] should be the same as Flow Logs VPC id",
                        "found": "aws_vpc[eks_vpc] is not the same as Flow Logs VPC id"
                    }
                ]
            },
            {
                "rule": {
                    "id": "a62a0135-60e2-403b-94fc-0bec8c4fa303",
                    "name": "RDS MySQL instance logs should be published to CloudWatch"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_db_instance[default].enabled_cloudwatch_logs_exports' should be defined and have one or more values.",
                        "found": "'aws_db_instance[default].enabled_cloudwatch_logs_exports' is undefined, null, or empty."
                    }
                ]
            },
            {
                "rule": {
                    "id": "a97f60e7-974c-4edc-ac17-de54e85384eb",
                    "name": "IAM Access Analyzer Not Enabled"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "resource",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_accessanalyzer_analyzer' should be set",
                        "found": "'aws_accessanalyzer_analyzer' is undefined"
                    }
                ]
            },
            {
                "rule": {
                    "id": "a4fdfea7-2386-4653-8579-349d8bf300fb",
                    "name": "Hardcoded AWS Access Key"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance[web_host].user_data",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 9,
                        "matchContent": "  user_data = \u003c\u003cEOF",
                        "expected": "'user_data' shouldn't contain hardcoded access key",
                        "found": "'user_data' contains hardcoded access key"
                    }
                ]
            },
            {
                "rule": {
                    "id": "1e19f986-2a37-4275-bf0b-03c447477932",
                    "name": "Virtual Private Cloud (VPC) Flow Logs feature should be enabled in all applicable AWS regions"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_vpc[eks_vpc]",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 43,
                        "matchContent": "resource aws_vpc \"eks_vpc\" {",
                        "expected": "aws_vpc[eks_vpc] should be the same as Flow Logs VPC id",
                        "found": "aws_vpc[eks_vpc] is not the same as Flow Logs VPC id"
                    }
                ]
            },
            {
                "rule": {
                    "id": "024b0ff0-c276-45fe-a59f-ce891b9d6b44",
                    "name": "ECR Repository Without Policy"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_ecr_repository[repository]",
                        "fileName": "aws/ecr.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_ecr_repository[repository] has policies attached",
                        "found": "aws_ecr_repository[repository] doesn't have policies attached"
                    }
                ]
            },
            {
                "rule": {
                    "id": "ba74c214-80a6-4bd3-94de-506dd250e442",
                    "name": "IAM policies should be attached to groups or roles only"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_iam_user_policy[{{userpolicy}}].user",
                        "fileName": "aws/iam.tf",
                        "lineNumber": 27,
                        "matchContent": "  user = \"${aws_iam_user.user.name}\"",
                        "expected": "'user' is redundant",
                        "found": "'user' exists"
                    }
                ]
            },
            {
                "rule": {
                    "id": "b098e097-64fb-406e-87a6-794193edde41",
                    "name": "Lambda Functions Without X-Ray Tracing"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_lambda_function[analysis_lambda]",
                        "fileName": "aws/lambda.tf",
                        "lineNumber": 31,
                        "matchContent": "resource \"aws_lambda_function\" \"analysis_lambda\" {",
                        "expected": "aws_lambda_function[analysis_lambda].tracing_config should be defined and not null",
                        "found": "aws_lambda_function[analysis_lambda].tracing_config is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "e886c8e8-9ec5-456d-81cb-2fa41ea44fc0",
                    "name": "S3 Bucket logging should be enabled"
                },
                "severity": "LOW",
                "failedResourceCount": 5,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'logging' is defined and not null",
                        "found": "'logging' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[financials]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 42,
                        "matchContent": "resource \"aws_s3_bucket\" \"financials\" {",
                        "expected": "'logging' is defined and not null",
                        "found": "'logging' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[flowbucket]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 271,
                        "matchContent": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                        "expected": "'logging' is defined and not null",
                        "found": "'logging' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[logs]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 114,
                        "matchContent": "resource \"aws_s3_bucket\" \"logs\" {",
                        "expected": "'logging' is defined and not null",
                        "found": "'logging' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[operations]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 65,
                        "matchContent": "resource \"aws_s3_bucket\" \"operations\" {",
                        "expected": "'logging' is defined and not null",
                        "found": "'logging' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "40b62975-0951-4500-b19d-fccb60c0546c",
                    "name": "KMS key is scheduled for deletion"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_kms_key[logs_key]",
                        "fileName": "aws/kms.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "KMS key is scheduled for deletion",
                        "found": "KMS key is scheduled for deletion"
                    }
                ]
            },
            {
                "rule": {
                    "id": "fe39a2ba-c3d9-457a-93f0-34c306ec9a3c",
                    "name": "Lambda action InvokeFunction should not be misconfigured"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_iam_user_policy[userpolicy].policy",
                        "fileName": "aws/iam.tf",
                        "lineNumber": 29,
                        "matchContent": "  policy = \u003c\u003cEOF",
                        "expected": "userpolicy[%!s(MISSING)].policy should not be misconfigured",
                        "found": "userpolicy[%!s(MISSING)].policy allows access to function (unqualified ARN) and its sub-resources, add another statement with \":*\" to function name"
                    }
                ]
            },
            {
                "rule": {
                    "id": "e92d4336-89b1-4aab-a985-e50e576fcc09",
                    "name": "EC2 Instance Using API Keys"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance[web_host]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_instance[web_host] should be using iam_instance_profile to assign a role with permissions",
                        "found": "aws_instance[web_host].user_data is being used to configure AWS API keys"
                    }
                ]
            },
            {
                "rule": {
                    "id": "9bf95947-a4ae-458d-be14-d853ec04a048",
                    "name": "Neptune cluster audit logs should be enabled"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_neptune_cluster[{{default}}]",
                        "fileName": "aws/neptune.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_neptune_cluster.enable_cloudwatch_logs_exports should be defined",
                        "found": "aws_neptune_cluster.enable_cloudwatch_logs_exports is undefined"
                    }
                ]
            },
            {
                "rule": {
                    "id": "e1769676-3779-4dab-b740-73863ac71452",
                    "name": "Database instance copy tags to snapshots should be enabled"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_db_instance[default].copy_tags_to_snapshot' should be defined and 'true'.",
                        "found": "'aws_db_instance[default].copy_tags_to_snapshot' is undefined or 'false'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "40d47c84-d9f8-45ad-97f3-ad0773e45ce9",
                    "name": "OpenSearch (ElasticSearch) service should use a dedicated master node"
                },
                "severity": "LOW",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "Elasticsearch: monitoring-framework",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Elasticsearch monitoring-framework should use a dedicated master",
                        "found": "Elasticsearch monitoring-framework is not using a dedicated master"
                    }
                ]
            },
            {
                "rule": {
                    "id": "23bc8fcb-8eef-44d2-afde-99c99f95b4ef",
                    "name": "Database instance should be encrypted with a customer-managed key"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_db_instance[default].kms_key_id' should be defined and contain an ARN of a KMS encryption key.",
                        "found": "'aws_db_instance[default].kms_key_id' is undefined or 'null'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "d855ba9c-2915-42d8-9d8d-441afe7e1c24",
                    "name": "Elasticsearch Log is disabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_elasticsearch_domain[{{monitoring-framework}}]",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'log_publishing_options' should be defined and not null",
                        "found": "'log_publishing_options' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "fb19279e-d41a-4dd2-8463-29ea0abb4864",
                    "name": "OpenSearch (ElasticSearch) domain policy should not be overly permissive"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_elasticsearch_domain_policy[monitoring-framework-policy].access_policies",
                        "fileName": "aws/es.tf",
                        "lineNumber": 42,
                        "matchContent": "  access_policies = data.aws_iam_policy_document.policy.json",
                        "expected": "aws_elasticsearch_domain_policy[monitoring-framework-policy].access_policies should not have wildcard in 'Action' and 'Principal'",
                        "found": "aws_elasticsearch_domain_policy[monitoring-framework-policy].access_policies has wildcard in 'Action' or 'Principal'"
                    }
                ]
            },
            {
                "rule": {
                    "id": "e741c9b9-b2bf-4360-98d7-98e1e645be5a",
                    "name": "EBS volume should be encrypted with a customer-managed key"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "EBS Volume kms: web_host_storage",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "EBS Volume web_host_storage is not using kms",
                        "found": "EBS Volume web_host_storage should use kms"
                    }
                ]
            },
            {
                "rule": {
                    "id": "b3d9ef4e-6e11-4510-8b92-bb906d526455",
                    "name": "S3 Bucket Replication should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 6,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_s3_bucket[data] should have replication",
                        "found": "aws_s3_bucket[data] doesn't have replication"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data_science]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 90,
                        "matchContent": "resource \"aws_s3_bucket\" \"data_science\" {",
                        "expected": "aws_s3_bucket[data_science] should have replication",
                        "found": "aws_s3_bucket[data_science] doesn't have replication"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[financials]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 42,
                        "matchContent": "resource \"aws_s3_bucket\" \"financials\" {",
                        "expected": "aws_s3_bucket[financials] should have replication",
                        "found": "aws_s3_bucket[financials] doesn't have replication"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[flowbucket]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 271,
                        "matchContent": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                        "expected": "aws_s3_bucket[flowbucket] should have replication",
                        "found": "aws_s3_bucket[flowbucket] doesn't have replication"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[logs]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 114,
                        "matchContent": "resource \"aws_s3_bucket\" \"logs\" {",
                        "expected": "aws_s3_bucket[logs] should have replication",
                        "found": "aws_s3_bucket[logs] doesn't have replication"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[operations]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 65,
                        "matchContent": "resource \"aws_s3_bucket\" \"operations\" {",
                        "expected": "aws_s3_bucket[operations] should have replication",
                        "found": "aws_s3_bucket[operations] doesn't have replication"
                    }
                ]
            },
            {
                "rule": {
                    "id": "5481056a-e4bf-44b3-9879-8f38ad339a58",
                    "name": "S3 Bucket policy should deny HTTP requests"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 6,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_s3_bucket[data] should contain a policy. The policy should exist and deny HTTP requests.",
                        "found": "aws_s3_bucket[data] does not contain a policy."
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data_science]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 90,
                        "matchContent": "resource \"aws_s3_bucket\" \"data_science\" {",
                        "expected": "aws_s3_bucket[data_science] should contain a policy. The policy should exist and deny HTTP requests.",
                        "found": "aws_s3_bucket[data_science] does not contain a policy."
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[financials]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 42,
                        "matchContent": "resource \"aws_s3_bucket\" \"financials\" {",
                        "expected": "aws_s3_bucket[financials] should contain a policy. The policy should exist and deny HTTP requests.",
                        "found": "aws_s3_bucket[financials] does not contain a policy."
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[flowbucket]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 271,
                        "matchContent": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                        "expected": "aws_s3_bucket[flowbucket] should contain a policy. The policy should exist and deny HTTP requests.",
                        "found": "aws_s3_bucket[flowbucket] does not contain a policy."
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[logs]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 114,
                        "matchContent": "resource \"aws_s3_bucket\" \"logs\" {",
                        "expected": "aws_s3_bucket[logs] should contain a policy. The policy should exist and deny HTTP requests.",
                        "found": "aws_s3_bucket[logs] does not contain a policy."
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[operations]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 65,
                        "matchContent": "resource \"aws_s3_bucket\" \"operations\" {",
                        "expected": "aws_s3_bucket[operations] should contain a policy. The policy should exist and deny HTTP requests.",
                        "found": "aws_s3_bucket[operations] does not contain a policy."
                    }
                ]
            },
            {
                "rule": {
                    "id": "6ade0961-c375-49b3-82c1-f3ba48e578f3",
                    "name": "ECR repository should be encrypted with KMS"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_ecr_repository[repository]",
                        "fileName": "aws/ecr.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'encryption_configuration' should be defined with 'KMS' as encryption type and a KMS key ARN",
                        "found": "'encryption_configuration' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "59b36de9-c41e-490f-b273-4bac86fb58e8",
                    "name": "OpenSearch (ElasticSearch) domain should not be publicly accessible"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "Elasticsearch: monitoring-framework",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Elasticsearch monitoring-framework domain should be configured with vpc options",
                        "found": "Elasticsearch monitoring-framework domain is not configured with vpc options"
                    }
                ]
            },
            {
                "rule": {
                    "id": "62cb69a0-5480-4f37-8ec5-5dcf68b526bf",
                    "name": "Database cluster encryption should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_neptune_cluster[default]",
                        "fileName": "aws/neptune.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_neptune_cluster[default].storage_encrypted' should be defined and 'true'.",
                        "found": "'aws_neptune_cluster[default].storage_encrypted' is undefined, 'null' or 'false'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "bff89b06-5588-44f1-aad6-fb74495eab86",
                    "name": "ELBv1 should use the latest predefined security policy"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_elb[weblb]",
                        "fileName": "aws/elb.tf",
                        "lineNumber": 2,
                        "matchContent": "resource \"aws_elb\" \"weblb\" {",
                        "expected": "The elb instance should have a secured policy",
                        "found": "The elb instance does not have a secured policy"
                    }
                ]
            },
            {
                "rule": {
                    "id": "d7970973-d20a-4c5c-9cf6-bdf7f7e167d5",
                    "name": "Database instance backup retention period should at least a week"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_db_instance[default].backup_retention_period' should be greater than 6 (days)",
                        "found": "'aws_db_instance[default].backup_retention_period' is less than 7 (or undefined)."
                    }
                ]
            },
            {
                "rule": {
                    "id": "ea78725d-88cf-44c5-b642-409df6e3cab9",
                    "name": "Database instance IAM authentication should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_db_instance[default].iam_database_authentication_enabled' should be defined and 'true'.",
                        "found": "'aws_db_instance[default].iam_database_authentication_enabled' is undefined, 'null' or 'false'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "723935cc-06bf-43c7-ae78-41c72ad69c33",
                    "name": "Database cluster backup retention period should be at least a week"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_neptune_cluster[default]",
                        "fileName": "aws/neptune.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_neptune_cluster[default].backup_retention_period' should be greater than 6 (days)",
                        "found": "'aws_neptune_cluster[default].backup_retention_period' is less than 7 (or undefined)."
                    }
                ]
            },
            {
                "rule": {
                    "id": "163c7417-b5c4-4a4b-9894-822424ba3989",
                    "name": "Hardcoded AWS Access Key In Lambda"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_lambda_function[analysis_lambda].environment.variables.access_key",
                        "fileName": "aws/lambda.tf",
                        "lineNumber": 44,
                        "matchContent": "      access_key = \"---REDACTED---\"",
                        "expected": "'environment.variables' shouldn't contain AWS Access Key",
                        "found": "'environment.variables' contains AWS Access Key"
                    }
                ]
            },
            {
                "rule": {
                    "id": "72d107bb-3c05-433b-842c-8790cafb566e",
                    "name": "ECR Image Tag Not Immutable"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_ecr_repository.repository.image_tag_mutability",
                        "fileName": "aws/ecr.tf",
                        "lineNumber": 3,
                        "matchContent": "  image_tag_mutability = \"MUTABLE\"",
                        "expected": "aws_ecr_repository.repository.image_tag_mutability should be 'IMMUTABLE'",
                        "found": "aws_ecr_repository.repository.image_tag_mutability is 'MUTABLE'"
                    }
                ]
            },
            {
                "rule": {
                    "id": "6b67c14f-3f8e-40d4-a0e2-10d5a31f97b5",
                    "name": "VPC Without Network Firewall"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_vpc[eks_vpc]",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 43,
                        "matchContent": "resource aws_vpc \"eks_vpc\" {",
                        "expected": "aws_vpc[eks_vpc] has an 'aws_networkfirewall_firewall' associated",
                        "found": "aws_vpc[eks_vpc] does not have an 'aws_networkfirewall_firewall' associated"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_vpc[web_vpc]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 117,
                        "matchContent": "resource \"aws_vpc\" \"web_vpc\" {",
                        "expected": "aws_vpc[web_vpc] has an 'aws_networkfirewall_firewall' associated",
                        "found": "aws_vpc[web_vpc] does not have an 'aws_networkfirewall_firewall' associated"
                    }
                ]
            },
            {
                "rule": {
                    "id": "b8e0f990-93f1-4aad-9cdc-5ea6c2491267",
                    "name": "VPC Subnet Assigns Public IP"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 4,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_subnet[eks_subnet1].map_public_ip_on_launch",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 65,
                        "matchContent": "  map_public_ip_on_launch = true",
                        "expected": "aws_subnet[eks_subnet1].map_public_ip_on_launch should be set to false or undefined",
                        "found": "aws_subnet[eks_subnet1].map_public_ip_on_launch is set to true"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_subnet[eks_subnet2].map_public_ip_on_launch",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 128,
                        "matchContent": "  map_public_ip_on_launch = true",
                        "expected": "aws_subnet[eks_subnet2].map_public_ip_on_launch should be set to false or undefined",
                        "found": "aws_subnet[eks_subnet2].map_public_ip_on_launch is set to true"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_subnet[web_subnet2].map_public_ip_on_launch",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 159,
                        "matchContent": "  map_public_ip_on_launch = true",
                        "expected": "aws_subnet[web_subnet2].map_public_ip_on_launch should be set to false or undefined",
                        "found": "aws_subnet[web_subnet2].map_public_ip_on_launch is set to true"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_subnet[web_subnet].map_public_ip_on_launch",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 139,
                        "matchContent": "  map_public_ip_on_launch = true",
                        "expected": "aws_subnet[web_subnet].map_public_ip_on_launch should be set to false or undefined",
                        "found": "aws_subnet[web_subnet].map_public_ip_on_launch is set to true"
                    }
                ]
            },
            {
                "rule": {
                    "id": "f4ac6273-757e-4297-990a-3a38b6c5ef3e",
                    "name": "S3 Bucket versioning should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 3,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'versioning' is set to true",
                        "found": "'versioning' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[financials]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 42,
                        "matchContent": "resource \"aws_s3_bucket\" \"financials\" {",
                        "expected": "'versioning' is set to true",
                        "found": "'versioning' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[flowbucket]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 271,
                        "matchContent": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                        "expected": "'versioning' is set to true",
                        "found": "'versioning' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "bf882a2f-b5cc-4b64-baef-5c11612024b9",
                    "name": "OpenSearch (ElasticSearch) search slow logs should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "Elasticsearch: monitoring-framework",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Elasticsearch monitoring-framework do not have index slow logs enabled",
                        "found": "Elasticsearch monitoring-framework index slow logs should be enabled"
                    }
                ]
            },
            {
                "rule": {
                    "id": "988a30f9-16ee-4199-b07f-0c672ae91cd8",
                    "name": "Database instance automated backups should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default].backup_retention_period",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 17,
                        "matchContent": "  backup_retention_period = 0",
                        "expected": "'backup_retention_period' should not equal '0'",
                        "found": "'backup_retention_period' is equal '0'"
                    }
                ]
            },
            {
                "rule": {
                    "id": "346e35d1-555b-4b89-b128-f79fc96c1752",
                    "name": "EBS Volume should be encrypted"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "encrypted: web_host_storage",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "EBS Volume web_host_storage is not encrypted",
                        "found": "EBS Volume web_host_storage should be encrypted"
                    }
                ]
            },
            {
                "rule": {
                    "id": "9a60cea7-0815-4311-b98b-7d2023bf8db0",
                    "name": "Database instance multi-availability zone should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_db_instance[default].multi_az' should be defined and 'true'.",
                        "found": "'aws_db_instance[default].multi_az' is undefined, 'null' or 'false'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "2df2a6f1-a8d5-4c34-a729-47258fd7152b",
                    "name": "OpenSearch (ElasticSearch) fine-grained access control should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "Elasticsearch: monitoring-framework",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Elasticsearch monitoring-framework should use fine-grained access control",
                        "found": "Elasticsearch monitoring-framework is not using fine-grained access control"
                    }
                ]
            },
            {
                "rule": {
                    "id": "2f8f2a48-89ef-448e-9482-b4eddf66b4fd",
                    "name": "KMS key automatic rotation should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_kms_key[logs_key]",
                        "fileName": "aws/kms.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "KMS key automatic rotation should be enabled",
                        "found": "KMS key automatic rotation is not enabled"
                    }
                ]
            },
            {
                "rule": {
                    "id": "a4f5c833-8ed2-4e3a-ba69-7ecd40723e45",
                    "name": "S3 Bucket should be encrypted with KMS (SSE-KMS)"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 5,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_s3_bucket[data] should be encrypted with customer-provided CMKs",
                        "found": "aws_s3_bucket[data] doesn't encrypted with customer-provided CMKs"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data_science]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 90,
                        "matchContent": "resource \"aws_s3_bucket\" \"data_science\" {",
                        "expected": "aws_s3_bucket[data_science] should be encrypted with customer-provided CMKs",
                        "found": "aws_s3_bucket[data_science] doesn't encrypted with customer-provided CMKs"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[financials]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 42,
                        "matchContent": "resource \"aws_s3_bucket\" \"financials\" {",
                        "expected": "aws_s3_bucket[financials] should be encrypted with customer-provided CMKs",
                        "found": "aws_s3_bucket[financials] doesn't encrypted with customer-provided CMKs"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[flowbucket]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 271,
                        "matchContent": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                        "expected": "aws_s3_bucket[flowbucket] should be encrypted with customer-provided CMKs",
                        "found": "aws_s3_bucket[flowbucket] doesn't encrypted with customer-provided CMKs"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[operations]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 65,
                        "matchContent": "resource \"aws_s3_bucket\" \"operations\" {",
                        "expected": "aws_s3_bucket[operations] should be encrypted with customer-provided CMKs",
                        "found": "aws_s3_bucket[operations] doesn't encrypted with customer-provided CMKs"
                    }
                ]
            },
            {
                "rule": {
                    "id": "2c127c88-e06e-465c-8921-1384e98e9226",
                    "name": "Unscanned ECR Image"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_ecr_repository[repository]",
                        "fileName": "aws/ecr.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_ecr_repository[repository].image_scanning_configuration should be defined",
                        "found": "aws_ecr_repository[repository].image_scanning_configuration is undefined"
                    }
                ]
            },
            {
                "rule": {
                    "id": "de5ff2e1-f413-4650-9d2c-cd390552d2b5",
                    "name": "S3 Bucket should have default encryption at rest enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 5,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_s3_bucket' to have 'server_side_encryption_configuration' associated",
                        "found": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[data_science]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 90,
                        "matchContent": "resource \"aws_s3_bucket\" \"data_science\" {",
                        "expected": "'aws_s3_bucket' to have 'server_side_encryption_configuration' associated",
                        "found": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[financials]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 42,
                        "matchContent": "resource \"aws_s3_bucket\" \"financials\" {",
                        "expected": "'aws_s3_bucket' to have 'server_side_encryption_configuration' associated",
                        "found": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[flowbucket]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 271,
                        "matchContent": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                        "expected": "'aws_s3_bucket' to have 'server_side_encryption_configuration' associated",
                        "found": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket[operations]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 65,
                        "matchContent": "resource \"aws_s3_bucket\" \"operations\" {",
                        "expected": "'aws_s3_bucket' to have 'server_side_encryption_configuration' associated",
                        "found": "'aws_s3_bucket' does not have 'server_side_encryption_configuration' associated"
                    }
                ]
            },
            {
                "rule": {
                    "id": "2e96339a-cab3-41ab-b307-b4d3c56eab1a",
                    "name": "Database cluster deletion protection should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_neptune_cluster[default]",
                        "fileName": "aws/neptune.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_neptune_cluster[default].deletion_protection' should be defined and 'true'.",
                        "found": "'aws_neptune_cluster[default].deletion_protection' is undefined or not 'true'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "b99bbdd8-a44c-48e2-982d-a50adad905cf",
                    "name": "Dan-Security Group should restrict access over port 22 (SSH) Copy"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[web-node].ingress.cidr_blocks",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 87,
                        "matchContent": "    cidr_blocks = [",
                        "expected": "aws_security_group[web-node] 'SSH' (Port:22) is not public",
                        "found": "aws_security_group[web-node] 'SSH' (Port:22) is public"
                    }
                ]
            },
            {
                "rule": {
                    "id": "7d448aaf-a3c2-4210-80be-36a6a8eaed0d",
                    "name": "KMS key policy should not allow access to all principals"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_kms_key[logs_key]",
                        "fileName": "aws/kms.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_kms_key[logs_key].policy should be defined and not null",
                        "found": "aws_kms_key[logs_key].policy is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "bbd1df5d-137e-4041-af28-0c952b6ace1d",
                    "name": "Database cluster IAM authentication should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_neptune_cluster[default]",
                        "fileName": "aws/neptune.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_neptune_cluster[default].iam_database_authentication_enabled' should be defined and 'true'.",
                        "found": "'aws_neptune_cluster[default].iam_database_authentication_enabled' is undefined, 'null' or 'false'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "8d6d34a9-8b42-4aef-a4fc-e054fafe1324",
                    "name": "OpenSearch (ElasticSearch) index slow logs should be enabled"
                },
                "severity": "MEDIUM",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "Elasticsearch: monitoring-framework",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Elasticsearch monitoring-framework index slow logs should be enabled",
                        "found": "Elasticsearch monitoring-framework do not have index slow logs enabled"
                    }
                ]
            },
            {
                "rule": {
                    "id": "6cffb4d2-d2b9-486a-8252-49c625b42d11",
                    "name": "EC2 instances should use instance Metadata Service Version 2 (IMDSv2)"
                },
                "severity": "HIGH",
                "failedResourceCount": 24,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/consts.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/ecr.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/iam.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/kms.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/lambda.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/neptune.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/providers.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance db_app ",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/consts.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/ecr.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/iam.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/kms.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/lambda.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/neptune.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/providers.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance web_host ",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'http_tokens' field should not be set to 'optional'",
                        "found": "'http_tokens' field is set to 'optional'"
                    }
                ]
            },
            {
                "rule": {
                    "id": "beacdb3d-73fb-4a52-a6a3-ecdec35ac6fc",
                    "name": "Security Group should restrict SSH access (TCP - port 22)"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[web-node].ingress",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 83,
                        "matchContent": "  ingress {",
                        "expected": "aws_security_group[web-node] 'SSH' (Port:22) should not be public",
                        "found": "aws_security_group[web-node] 'SSH' (Port:22) is public"
                    }
                ]
            },
            {
                "rule": {
                    "id": "2399d518-d4f8-437f-92c3-4f1d738bf9ac",
                    "name": "Database instance encryption should be enabled"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'aws_db_instance[default].storage_encrypted' should be defined and 'true'",
                        "found": "'aws_db_instance[default].storage_encrypted' is 'false' or undefined."
                    }
                ]
            },
            {
                "rule": {
                    "id": "5f009a8e-5b17-4a1e-984e-380a35de6638",
                    "name": "EKS Cluster Encryption Disabled"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_eks_cluster[eks_cluster]",
                        "fileName": "aws/eks.tf",
                        "lineNumber": 187,
                        "matchContent": "resource aws_eks_cluster \"eks_cluster\" {",
                        "expected": "'encryption_config' should be defined and not null",
                        "found": "'encryption_config' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "307010fc-c211-4bc5-8679-da170ad7f3b9",
                    "name": "IAM user with console access should have MFA enabled"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_iam_user_policy[userpolicy].policy",
                        "fileName": "aws/iam.tf",
                        "lineNumber": 29,
                        "matchContent": "  policy = \u003c\u003cEOF",
                        "expected": "The attributes 'policy.Statement.Condition', 'policy.Statement.Condition.BoolIfExists', and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' should be defined and not null",
                        "found": "The attribute(s) 'policy.Statement.Condition' or/and 'policy.Statement.Condition.BoolIfExists' or/and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is/are undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "53691047-81dd-4c5f-9175-e83f337b183b",
                    "name": "OpenSearch (ElasticSearch) domain should be set to encrypt node to node"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_elasticsearch_domain[{{monitoring-framework}}]",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "The attribute 'node_to_node_encryption' should be set to true",
                        "found": "The attribute 'node_to_node_encryption' is undefined"
                    }
                ]
            },
            {
                "rule": {
                    "id": "9068c27a-a2c7-414e-9b7d-f646ed0edf57",
                    "name": "EC2 Instance Has Public IP"
                },
                "severity": "HIGH",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance.db_app",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 242,
                        "matchContent": "resource \"aws_instance\" \"db_app\" {",
                        "expected": "'associate_public_ip_address' should be defined and not null",
                        "found": "'associate_public_ip_address' is undefined or null"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_instance.web_host",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'associate_public_ip_address' should be defined and not null",
                        "found": "'associate_public_ip_address' is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "116e4553-7535-4b19-8341-d6fd44500c8b",
                    "name": "HTTP Port Open"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[web-node]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 77,
                        "matchContent": "resource \"aws_security_group\" \"web-node\" {",
                        "expected": "aws_security_group.ingress shouldn't open the HTTP port (80)",
                        "found": "aws_security_group.ingress opens the HTTP port (80)"
                    }
                ]
            },
            {
                "rule": {
                    "id": "8b939f3d-5a80-42f0-9143-3ad7f1e8202f",
                    "name": "Security Group should restrict outbound traffic to the internet Copy"
                },
                "severity": "HIGH",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group][web-node][egress]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group], resource name:[web-node] - is not public",
                        "found": "resource type:[aws_security_group], resource name:[web-node] - is public"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group_rule][egress][egress]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group_rule], resource name:[egress] - is not public",
                        "found": "resource type:[aws_security_group_rule], resource name:[egress] - is public"
                    }
                ]
            },
            {
                "rule": {
                    "id": "df3cabb1-665d-4c68-8f88-acc8350ec204",
                    "name": "OpenSearch (ElasticSearch) anonymous access should not be allowed"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "Elasticsearch: monitoring-framework",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "Elasticsearch monitoring-framework ishould use advanced security",
                        "found": "Elasticsearch monitoring-framework is not using advanced security"
                    }
                ]
            },
            {
                "rule": {
                    "id": "a18c846e-7774-43dc-8c4d-3913acbcd244",
                    "name": "EBS Volume Snapshot Not Encrypted"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_ebs_snapshot[example_snapshot]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 53,
                        "matchContent": "resource \"aws_ebs_snapshot\" \"example_snapshot\" {",
                        "expected": "'aws_ebs_volume[web_host_storage].encrypted' associated with aws_ebs_snapshot[example_snapshot] should be set",
                        "found": "'aws_ebs_volume[web_host_storage].encrypted' associated with aws_ebs_snapshot[example_snapshot] is undefined"
                    }
                ]
            },
            {
                "rule": {
                    "id": "6aec04f0-676e-4a71-abea-14e8f352951a",
                    "name": "Security Group should restrict outbound traffic to the internet Copy"
                },
                "severity": "HIGH",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group][web-node][egress]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group], resource name:[web-node] - is not public",
                        "found": "resource type:[aws_security_group], resource name:[web-node] - is public"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group_rule][egress][egress]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group_rule], resource name:[egress] - is not public",
                        "found": "resource type:[aws_security_group_rule], resource name:[egress] - is public"
                    }
                ]
            },
            {
                "rule": {
                    "id": "3bc4385f-784a-40e9-bc8a-cfc23f091266",
                    "name": "Database instance should not be publicly accessible"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default].publicly_accessible",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 21,
                        "matchContent": "  publicly_accessible     = true",
                        "expected": "'aws_db_instance[default].publicly_accessible' should be 'false'",
                        "found": "'aws_db_instance[default].publicly_accessible' is 'true'."
                    }
                ]
            },
            {
                "rule": {
                    "id": "e79067ef-c517-4a75-813b-b1cf274fbccc",
                    "name": "CMK Rotation Disabled"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_kms_key[logs_key]",
                        "fileName": "aws/kms.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "aws_kms_key[logs_key].enable_key_rotation should be set to true",
                        "found": "aws_kms_key[logs_key].enable_key_rotation is undefined"
                    }
                ]
            },
            {
                "rule": {
                    "id": "ae664239-1dc5-4563-b024-732a76faa21e",
                    "name": "DB Security Group Has Public IP"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_db_instance[default].publicly_accessible",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 21,
                        "matchContent": "  publicly_accessible     = true",
                        "expected": "'publicly_accessible' should be set to false or undefined",
                        "found": "'publicly_accessible' is set to true"
                    }
                ]
            },
            {
                "rule": {
                    "id": "990be279-0266-4e6e-ad78-741000fac496",
                    "name": "OpenSearch (ElasticSearch) domain should be set to encrypt data at rest  "
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_elasticsearch_domain[monitoring-framework]",
                        "fileName": "aws/es.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "'encrypt_at_rest' should be set and enabled",
                        "found": "'encrypt_at_rest' is undefined"
                    }
                ]
            },
            {
                "rule": {
                    "id": "844374e9-7e14-4a90-9170-f3c3ce00921b",
                    "name": "Security Group should restrict SSH access (TCP - port 22) Copy"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_security_group[web-node].ingress.cidr_blocks",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 87,
                        "matchContent": "    cidr_blocks = [",
                        "expected": "aws_security_group[web-node] 'SSH' (Port:22) should not be public",
                        "found": "aws_security_group[web-node] 'SSH' (Port:22) is public"
                    }
                ]
            },
            {
                "rule": {
                    "id": "4105eb25-b38d-4882-9615-8d894b5b8bff",
                    "name": "Security Group should restrict outbound traffic to the internet"
                },
                "severity": "HIGH",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group][web-node][egress]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group], resource name:[web-node] - is not public",
                        "found": "resource type:[aws_security_group], resource name:[web-node] - is public"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group_rule][egress][egress]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group_rule], resource name:[egress] - is not public",
                        "found": "resource type:[aws_security_group_rule], resource name:[egress] - is public"
                    }
                ]
            },
            {
                "rule": {
                    "id": "e24d894e-a4db-4b8d-98cc-38d5825e1c7a",
                    "name": "Missing User Instruction"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "FROM={{python:3.7-slim}}",
                        "fileName": "aws/resources/Dockerfile",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "The 'Dockerfile' should contain the 'USER' instruction",
                        "found": "The 'Dockerfile' does not contain any 'USER' instruction"
                    }
                ]
            },
            {
                "rule": {
                    "id": "9d4e9a31-499a-421c-b314-ca7d3595d340",
                    "name": "S3 Bucket Object Not Encrypted"
                },
                "severity": "HIGH",
                "failedResourceCount": 1,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "aws_s3_bucket_object[{{data_object}}]",
                        "fileName": "aws/s3.tf",
                        "lineNumber": 23,
                        "matchContent": "resource \"aws_s3_bucket_object\" \"data_object\" {",
                        "expected": "aws_s3_bucket_object.server_side_encryption should be defined and not null",
                        "found": "aws_s3_bucket_object.server_side_encryption is undefined or null"
                    }
                ]
            },
            {
                "rule": {
                    "id": "e71bbca7-aef2-43a0-b262-dcd305bf2e08",
                    "name": "Security Group should restrict outbound traffic to the internet Copy"
                },
                "severity": "HIGH",
                "failedResourceCount": 2,
                "failedPolicyMatches": [],
                "matches": [
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group][web-node][egress]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group], resource name:[web-node] - is not public",
                        "found": "resource type:[aws_security_group], resource name:[web-node] - is public"
                    },
                    {
                        "failedPolicies": [],
                        "resourceName": "[aws_security_group_rule][egress][egress]",
                        "fileName": "aws/db-app.tf",
                        "lineNumber": 1,
                        "matchContent": "",
                        "expected": "resource type:[aws_security_group_rule], resource name:[egress] - is not public",
                        "found": "resource type:[aws_security_group_rule], resource name:[egress] - is public"
                    }
                ]
            },
            {
                "rule": {
                    "id": "f1ba1787-37dc-4ef8-869b-b90b10506343",
                    "name": "Unrestricted Security Group Ingress"
                },
                "severity": "CRITICAL",
                "failedResourceCount": 2,
                "failedPolicyMatches": [
                    {
                        "policy": {
                            "id": "2bae22c8-3520-4014-a6f9-a7902c79ba07",
                            "name": "scotty-iac-monitor-only",
                            "description": null,
                            "type": "IAC",
                            "builtin": false,
                            "projects": null,
                            "params": {
                                "__typename": "cicdscanpolicyparamsiac",
                                "severityThreshold": "CRITICAL",
                                "countThreshold": 9999,
                                "ignoredRules": null,
                                "validatableIgnoredRules": null,
                                "builtinIgnoreTagsEnabled": false,
                                "customIgnoreTags": null,
                                "securityFrameworks": null
                            }
                        }
                    }
                ],
                "matches": [
                    {
                        "failedPolicies": [
                            {
                                "policy": {
                                    "id": "2bae22c8-3520-4014-a6f9-a7902c79ba07",
                                    "name": "scotty-iac-monitor-only",
                                    "description": null,
                                    "type": "IAC",
                                    "builtin": false,
                                    "projects": null,
                                    "params": {
                                        "__typename": "cicdscanpolicyparamsiac",
                                        "severityThreshold": "CRITICAL",
                                        "countThreshold": 9999,
                                        "ignoredRules": null,
                                        "validatableIgnoredRules": null,
                                        "builtinIgnoreTagsEnabled": false,
                                        "customIgnoreTags": null,
                                        "securityFrameworks": null
                                    }
                                }
                            }
                        ],
                        "resourceName": "aws_security_group[web-node]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 95,
                        "matchContent": "    \"0.0.0.0/0\"]",
                        "expected": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
                        "found": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
                    },
                    {
                        "failedPolicies": [
                            {
                                "policy": {
                                    "id": "2bae22c8-3520-4014-a6f9-a7902c79ba07",
                                    "name": "scotty-iac-monitor-only",
                                    "description": null,
                                    "type": "IAC",
                                    "builtin": false,
                                    "projects": null,
                                    "params": {
                                        "__typename": "cicdscanpolicyparamsiac",
                                        "severityThreshold": "CRITICAL",
                                        "countThreshold": 9999,
                                        "ignoredRules": null,
                                        "validatableIgnoredRules": null,
                                        "builtinIgnoreTagsEnabled": false,
                                        "customIgnoreTags": null,
                                        "securityFrameworks": null
                                    }
                                }
                            }
                        ],
                        "resourceName": "aws_security_group[web-node]",
                        "fileName": "aws/ec2.tf",
                        "lineNumber": 88,
                        "matchContent": "    \"0.0.0.0/0\"]",
                        "expected": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
                        "found": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
                    }
                ]
            }
        ],
        "scanStatistics": {
            "infoMatches": 6,
            "lowMatches": 32,
            "mediumMatches": 56,
            "highMatches": 49,
            "criticalMatches": 2,
            "filesFound": 14,
            "filesParsed": 14,
            "queriesLoaded": 862,
            "queriesExecuted": 2470,
            "queriesExecutionFailed": 0
        },
        "secrets": [
            {
                "description": "Passwords And Secrets - Secret in TF Variable",
                "path": "aws/consts.tf",
                "lineNumber": 42,
                "offset": 0,
                "type": "PASSWORD",
                "contains": [
                    {
                        "name": "Passwords And Secrets - Secret in TF Variable",
                        "type": "PASSWORD"
                    }
                ],
                "snippet": null,
                "failedPolicyMatches": [],
                "details": null
            },
            {
                "description": "Passwords And Secrets - AWS Access Key",
                "path": "aws/ec2.tf",
                "lineNumber": 15,
                "offset": 0,
                "type": "CLOUD_KEY",
                "contains": [
                    {
                        "name": "Passwords And Secrets - AWS Access Key",
                        "type": "CLOUD_KEY"
                    }
                ],
                "snippet": null,
                "failedPolicyMatches": [],
                "details": null
            },
            {
                "description": "Passwords And Secrets - AWS Secret Key",
                "path": "aws/ec2.tf",
                "lineNumber": 16,
                "offset": 0,
                "type": "CLOUD_KEY",
                "contains": [
                    {
                        "name": "Passwords And Secrets - AWS Secret Key",
                        "type": "CLOUD_KEY"
                    }
                ],
                "snippet": null,
                "failedPolicyMatches": [],
                "details": null
            },
            {
                "description": "Passwords And Secrets - AWS Access Key",
                "path": "aws/lambda.tf",
                "lineNumber": 44,
                "offset": 0,
                "type": "CLOUD_KEY",
                "contains": [
                    {
                        "name": "Passwords And Secrets - AWS Access Key",
                        "type": "CLOUD_KEY"
                    }
                ],
                "snippet": null,
                "failedPolicyMatches": [],
                "details": null
            },
            {
                "description": "Passwords And Secrets - Generic Secret",
                "path": "aws/lambda.tf",
                "lineNumber": 45,
                "offset": 0,
                "type": "CLOUD_KEY",
                "contains": [
                    {
                        "name": "Passwords And Secrets - Generic Secret",
                        "type": "CLOUD_KEY"
                    }
                ],
                "snippet": null,
                "failedPolicyMatches": [],
                "details": null
            },
            {
                "description": "Passwords And Secrets - AWS Access Key",
                "path": "aws/providers.tf",
                "lineNumber": 10,
                "offset": 0,
                "type": "CLOUD_KEY",
                "contains": [
                    {
                        "name": "Passwords And Secrets - AWS Access Key",
                        "type": "CLOUD_KEY"
                    }
                ],
                "snippet": null,
                "failedPolicyMatches": [],
                "details": null
            },
            {
                "description": "Passwords And Secrets - Generic Secret",
                "path": "aws/providers.tf",
                "lineNumber": 11,
                "offset": 0,
                "type": "CLOUD_KEY",
                "contains": [
                    {
                        "name": "Passwords And Secrets - Generic Secret",
                        "type": "CLOUD_KEY"
                    }
                ],
                "snippet": null,
                "failedPolicyMatches": [],
                "details": null
            }
        ]
    }
}